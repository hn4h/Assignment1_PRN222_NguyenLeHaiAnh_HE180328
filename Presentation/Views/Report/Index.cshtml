@model IEnumerable<NguyenLeHaiAnh_HE180328_Assignment1.DataAccess.Models.NewsArticle>
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "News Report";
    var groupBy = ViewBag.GroupBy as string ?? "";
}

<h2 class="mb-4">News Report</h2>

<form method="get" class="row g-3 mb-4">
    <div class="col-md-3">
        <input type="date" name="start" value="@ViewBag.Start" class="form-control" placeholder="Start Date" />
    </div>
    <div class="col-md-3">
        <input type="date" name="end" value="@ViewBag.End" class="form-control" placeholder="End Date" />
    </div>
    <div class="col-md-3">
        <select name="groupBy" class="form-select">
            <option value="">No Grouping</option>
            <option value="category" selected="@(groupBy == "category")">Group by Category</option>
            <option value="author" selected="@(groupBy == "author")">Group by Author</option>
        </select>
    </div>
    <div class="col-md-3">
        <button type="submit" class="btn btn-primary w-100">Filter</button>
    </div>
</form>

<div class="mb-3">
    <a asp-action="ExportToExcel" 
       asp-route-start="@ViewBag.Start" 
       asp-route-end="@ViewBag.End" 
       class="btn btn-success">
        <i class="bi bi-file-earmark-excel"></i> Export to Excel
    </a>
</div>

@if (string.IsNullOrEmpty(groupBy))
{
    <!-- No Grouping - Display as table -->
    <table class="table table-bordered table-striped">
        <thead class="table-light">
            <tr>
                <th>Title</th>
                <th>Author Email</th>
                <th>Author Name</th>
                <th>Category</th>
                <th>Created Date</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var n in Model)
            {
                <tr>
                    <td>@n.NewsTitle</td>
                    <td>@n.CreatedBy?.AccountEmail</td>
                    <td>@n.CreatedBy?.AccountName</td>
                    <td>@n.Category?.CategoryName</td>
                    <td>@n.CreatedDate?.ToString("yyyy-MM-dd")</td>
                    <td>@(n.NewsStatus == true ? "Active" : "Inactive")</td>
                </tr>
            }
        </tbody>
    </table>
}
else if (groupBy == "category")
{
    <!-- Group by Category -->
    var grouped = Model.GroupBy(n => n.Category?.CategoryName ?? "No Category")
                       .OrderBy(g => g.Key);
    
    @foreach (var group in grouped)
    {
        <div class="card mb-3">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">
                    <i class="bi bi-folder"></i> @group.Key
                    <span class="badge bg-light text-dark ms-2">@group.Count() article(s)</span>
                </h5>
            </div>
            <div class="card-body p-0">
                <table class="table table-bordered table-striped mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>Title</th>
                            <th>Author Email</th>
                            <th>Author Name</th>
                            <th>Created Date</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var n in group.OrderByDescending(x => x.CreatedDate))
                        {
                            <tr>
                                <td>@n.NewsTitle</td>
                                <td>@n.CreatedBy?.AccountEmail</td>
                                <td>@n.CreatedBy?.AccountName</td>
                                <td>@n.CreatedDate?.ToString("yyyy-MM-dd")</td>
                                <td>@(n.NewsStatus == true ? "Active" : "Inactive")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
}
else if (groupBy == "author")
{
    <!-- Group by Author -->
    var grouped = Model.GroupBy(n => new { 
                           Email = n.CreatedBy?.AccountEmail ?? "Unknown", 
                           Name = n.CreatedBy?.AccountName ?? "Unknown Author" 
                       })
                       .OrderBy(g => g.Key.Name);
    
    @foreach (var group in grouped)
    {
        <div class="card mb-3">
            <div class="card-header bg-success text-white">
                <h5 class="mb-0">
                    <i class="bi bi-person"></i> @group.Key.Name (@group.Key.Email)
                    <span class="badge bg-light text-dark ms-2">@group.Count() article(s)</span>
                </h5>
            </div>
            <div class="card-body p-0">
                <table class="table table-bordered table-striped mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>Title</th>
                            <th>Category</th>
                            <th>Created Date</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var n in group.OrderByDescending(x => x.CreatedDate))
                        {
                            <tr>
                                <td>@n.NewsTitle</td>
                                <td>@n.Category?.CategoryName</td>
                                <td>@n.CreatedDate?.ToString("yyyy-MM-dd")</td>
                                <td>@(n.NewsStatus == true ? "Active" : "Inactive")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
}

<div class="mt-3">
    <p class="fw-bold mb-2">Summary:</p>
    <ul class="list-unstyled ms-3">
        <li><strong>Total:</strong> @Model.Count() article(s)</li>
        <li><strong>Active:</strong> <span class="text-success">@ViewBag.ActiveCount article(s)</span></li>
        <li><strong>Inactive:</strong> <span class="text-danger">@ViewBag.InactiveCount article(s)</span></li>
    </ul>
</div>
